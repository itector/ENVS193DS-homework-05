---
title: "homework-05"
format: html
editor: visual
---

## Homework 5

```{r packages}
# should haves
library(tidyverse)
library(here)
library(janitor)
library(ggeffects)
library(performance)
library(naniar)
library(flextable)
library(car)
library(broom)
library(corrplot)
library(AICcmodavg)
library(GGally)
# would be nice to have
library(MuMIn)
#library(equatiomatic)
library(corrplot)
```

```{r reading-data}
plant <- read_csv(here("data", "hf109-01-sarracenia.csv")) %>% 
  # make the column names cleaner
  clean_names() %>% 
  # selecting the columns of interest
  select(totmass, species, feedlevel, sla, chlorophyll, amass, num_lvs, num_phylls)
```

```{r missing-data-vis}
gg_miss_var(plant)
```

Sub-setting the data by dropping NA's

```{r subset-drop-na}
plant_subset <- plant %>% 
  drop_na(sla, chlorophyll, amass, num_lvs, num_phylls)
```

Correlation Plot

```{r corr-plot}
# calculate pearson's r for numerical values only
plant_cor <- plant_subset %>% 
  select(feedlevel:num_phylls) %>% 
  cor(method = "pearson")

# creating a correlation plot
corrplot(plant_cor,
         # change the shape of what's in the cells
         method = "ellipse",
         addCoef.col = "black"
         )
```

Plot each variable against each other

```{r pairs-plot}
plant_subset %>% 
  select(species:num_phylls) %>% 
  ggpairs()
```

Starting regression here:

```{r null-and-full-models}
# making a null model, which is represented by a one and we only want it from the plant_subset dataset
null <- lm(totmass ~ 1, data = plant_subset)
# now we include all of the variables
full <- lm(totmass ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)
```

Assess normality and homeoscedacisity via diagnostic plots:

```{r full-diagnostic}
par(mfrow = c(2,2))
plot(full)
```
